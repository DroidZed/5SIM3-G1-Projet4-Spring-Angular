pipeline {
    agent any

    environment {
        dockerCredentials               = 'dockerCredentials'
        registry                        = 'islmm/IslemNAFFETI-5SIM3-G1-Projet4-Spring-Angular'
        dockerImage                     = ''
        sonarToken                      = credentials('sonarToken')
    }

    stages {
        stage('Clean Projects') {
            steps {
                sh "mvn clean"
            }
        }
        stage('Building project') {
            steps {
                echo 'Validating...'
                sh "mvn validate"
                echo 'Compiling...'
                sh "mvn compile"
            }
        }
        stage('Test the code') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh "mvn test"
                }
            }
        }
        stage('Jacoco') {
             steps {
                sh "mvn jacoco:report"
             }
         }
        stage('Docker Image') {
            steps {
                script {
                    dockerImage = docker.build registry + ":1.0.0"
                }
            }
        }
        stage('Docker Push to hub') {
            steps {
                script {
                    docker.withRegistry('', dockerCredentials) { dockerImage.push() }
                }
            }
        }
        stage("Docker Compose") {
            steps {
                sh "docker compose start"
            }
        }
        stage('SONAR') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh "mvn sonar:sonar -Dsonar.token=$sonarToken"
                }
            }
        }
        stage('Nexus') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh "mvn deploy -DskipTests"
                }
            }
        }
    }
}