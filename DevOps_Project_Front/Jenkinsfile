pipeline {
    agent any

    environment {
        dockerCredentials               = 'dockerCredentials'
        registry                        = 'islmm/devops-front'
        dockerImage                     = ''
        MY_EMAIL                        = 'islem.naffeti@esprit.tn'
    }

    stages {
        stage('Docker Image') {
            steps {
                    dir("DevOps_Project_Front") {
                        script {
                            dockerImage = docker.build registry + ":1.0.0"
                    }
                }
            }
        }
        stage('Docker Push to hub') {
            steps {
                dir("DevOps_Project_Front") {
                    script {
                        docker.withRegistry('', dockerCredentials) { dockerImage.push() }
                    }
                }
            }
        }
    }

    post {
        success {
            mail bcc: '',
            body: '''
            'Dear Islem ,
            we are happy to inform you that your pipeline ran successfully.
            Good job!
                -Jenkins Team.''',
            cc: '',
            from: "$MY_EMAIL",
            replyTo: '',
            subject: 'Angular - Build Finished - Success',
            to: "$MY_EMAIL"
        }

        failure {
            mail bcc: '',
            body: '''
            'Dear Islem,
            we are sorry to inform you that your pipeline build failed.
            Keep working!
                -Jenkins Team - ''',
            cc: '',
            from: "$MY_EMAIL",
            replyTo: '',
            subject: 'Angular - Build Finished - Failure',
            to: "$MY_EMAIL"
        }

        always {
            sh "docker stop test_sql"
            sh "docker rm test_sql"
            emailext attachLog: true,
            body: '', subject: 'Build finished',
            from: "$MY_EMAIL",
            to: "$MY_EMAIL"
            cleanWs()
        }
    }
}
